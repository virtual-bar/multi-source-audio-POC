{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandon Whittle\\\\Desktop\\\\Virtual Bar\\\\test-ts\\\\components\\\\Master.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nconst Master = ({\n  audioElement\n}) => {\n  const {\n    0: playing,\n    1: setPlaying\n  } = useState(false);\n\n  const togglePlaying = () => {\n    setPlaying(!playing);\n    audioElement.paused ? audioElement.play() : audioElement.pause();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    \"data-playing\": playing,\n    className: \"control-play\",\n    role: \"switch\",\n    onClick: togglePlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, playing ? 'Playing' : 'Paused')));\n};\n\nexport default Master;","map":{"version":3,"sources":["C:/Users/Brandon Whittle/Desktop/Virtual Bar/test-ts/components/Master.tsx"],"names":["React","useState","Master","audioElement","playing","setPlaying","togglePlaying","paused","play","pause"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACnC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBJ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMK,aAAa,GAAG,MAAM;AAC1BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAD,IAAAA,YAAY,CAACI,MAAb,GAAsBJ,YAAY,CAACK,IAAb,EAAtB,GAA4CL,YAAY,CAACM,KAAb,EAA5C;AACD,GAHD;;AAKA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,oBAAcL,OADhB;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,OAAO,EAAEE,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGF,OAAO,GAAG,SAAH,GAAe,QANzB,CADF,CADF,CADF;AAcD,CAtBD;;AAuBA,eAAeF,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Master = ({ audioElement }) => {\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const togglePlaying = () => {\r\n    setPlaying(!playing);\r\n    audioElement.paused ? audioElement.play() : audioElement.pause();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <button\r\n          data-playing={playing}\r\n          className=\"control-play\"\r\n          role=\"switch\"\r\n          onClick={togglePlaying}\r\n        >\r\n          {playing ? 'Playing' : 'Paused'}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Master;\r\n"]},"metadata":{},"sourceType":"module"}