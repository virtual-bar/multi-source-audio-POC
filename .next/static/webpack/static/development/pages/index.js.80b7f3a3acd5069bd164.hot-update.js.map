{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.80b7f3a3acd5069bd164.hot-update.js","sources":["webpack:///./components/AudioTrack.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button } from './styles';\r\n\r\nconst useAudio = ({ initialGain }) => {\r\n  if (typeof window !== 'undefined') {\r\n    const AudioContext = window.AudioContext;\r\n    const [audioCtx] = useState(new AudioContext());\r\n    const [gainNode] = useState(audioCtx.createGain());\r\n\r\n    gainNode.gain.value = initialGain;\r\n\r\n    return { audioCtx, gainNode };\r\n  }\r\n};\r\n\r\nconst AudioTrack = ({ audioElement }) => {\r\n  const [playing, setPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(0);\r\n\r\n  if (typeof window !== 'undefined') {\r\n    const { audioCtx, gainNode } = useAudio({ initialGain: 1 });\r\n\r\n    const togglePlaying = () => {\r\n      if (audioCtx.state === 'suspended') {\r\n        audioCtx.resume();\r\n      }\r\n      setPlaying(!playing);\r\n    };\r\n\r\n    const changeVolume = e => {\r\n      const {\r\n        target: { value }\r\n      } = e;\r\n      setVolume(value);\r\n    };\r\n\r\n    const getAudioElement = () => audioElement;\r\n\r\n    useEffect(() => {\r\n      const audioElement = getAudioElement();\r\n      const track = audioCtx.createMediaElementSource(audioElement);\r\n\r\n      track.connect(gainNode).connect(audioCtx.destination);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      const audioElement = getAudioElement();\r\n\r\n      if (playing && audioElement.paused) {\r\n        audioElement.play();\r\n      } else if (!playing && !audioElement.paused) {\r\n        audioElement.pause();\r\n      }\r\n\r\n      gainNode.gain.value = volume;\r\n    }, [playing, volume]);\r\n\r\n    return playing;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        data-playing={playing}\r\n        className=\"control-play\"\r\n        role=\"switch\"\r\n        onClick={togglePlaying}\r\n      >\r\n        {playing ? 'Playing' : 'Paused'}\r\n      </Button>\r\n\r\n      <input\r\n        type=\"range\"\r\n        id=\"volume\"\r\n        className=\"control-volume\"\r\n        min=\"0\"\r\n        max=\"2\"\r\n        value={volume}\r\n        onChange={changeVolume}\r\n        list=\"gainVals\"\r\n        step=\"0.01\"\r\n      />\r\n      <datalist id=\"gainVals\">\r\n        <option value=\"1\" label=\"unity\" />\r\n      </datalist>\r\n    </>\r\n  );\r\n};\r\nexport default AudioTrack;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;;;;A","sourceRoot":""}